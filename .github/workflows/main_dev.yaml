name: CI/CD for development environment (FE)

on:
  push:
    branches:
      - main
    tags:
      - '*'
  # pull_request:
  #   branches:
  #     - develop

env:
  REPOSITORY_NAME: repository-k8s.sotaicg.com
  PROJECT_NAME: test
  TAG: latest

jobs:
  build:
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: https://repository-k8s.sotaicg.com/
          username: ${{ secrets.REPOSITORY_USERNAME }}
          password: ${{ secrets.REPOSITORY_PASSWORD }}
          logout: false
          
      - name: Determine tag
        if: always()
        run: |
          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            TAG=$(echo "${{ github.ref }}" | sed 's/refs\/tags\///')
          else
            TAG="${{ env.TAG }}"
          fi
          echo "Tag: $TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Build and push to Harbor repository
        id: output_SHA
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REPOSITORY_NAME }}/${{ env.PROJECT_NAME }}/test:latest
          output: type=digest,dest=/tmp/test.txt

      # - name: Reach SHA ingest
      #   id: reach-sha
      #   run: docker inspect --format='{{index .RepoDigests 0}}' ${{ env.REPOSITORY_NAME }}/${{ env.PROJECT_NAME }}/test:latest | cut -d '@' -f 2-
      - name: Reach
        run: cat /tmp/test.txt
  # update-manifest-stage:
  #   needs: build
  #   runs-on: [ubuntu-latest]
  #   if: (startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/')) && ${{ needs.build.result == 'success' }}
  #   steps:
  #     - name: Reach helm repo
  #       uses: actions/checkout@v3
  #       with:
  #         repository: vicg-development/Test
  #         ref: "master"
  #         token: ${{ secrets.G_TOKEN }}
  #     - name: setup git config
  #       run: |
  #         ls
  #         git config --global user.email "giang.pham2@sotatek"
  #         git config --global user.name "Giang Pham"
  #         echo "DOCKER SHA: ${{ steps.reach-sha.outputs.stdout }}"
  #         sed -i "s/^  tag:.*/  tag: latest@${{ steps.reach-sha.outputs.stdout }}/" values.yaml

